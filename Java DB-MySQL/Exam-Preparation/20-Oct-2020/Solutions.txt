select p.name as `product_name`, p.price,
       p.best_before,
       CONCAT(SUBSTR(p.description, 1, 10), '...') as short_description, pic.url from products as p
join pictures as pic on pic.id = p.picture_id
where length(p.description) > 100 AND YEAR(pic.added_on) <= 2018 AND p.price > 20
order by p.price desc;

select s.name, COUNT(p.id) as product_count, ROUND(AVG(p.price), 2) as avg from stores as s
left join products_stores as ps on s.id = ps.store_id
left join products as p on p.id = ps.product_id
group by s.name
order by product_count desc, avg desc, s.id;

select CONCAT_WS(' ',e.first_name, e.last_name) as Full_name,
s.name as store_name, a.name as address, e.salary from employees as e
join stores as s on s.id = e.store_id
join addresses as a on a.id = s.address_id
where e.salary < 4000 AND a.name LIKE '%5%' AND LENGTH(s.name) > 8 AND e.last_name LIKE '%n';

select REVERSE(s.name) as reversed_name, CONCAT(UPPER(t.name), '-', a.name) as full_address, COUNT(e.id) as empl_count from stores as s
join addresses as a on a.id = s.address_id
join towns as t on a.town_id = t.id
join employees as e on s.id = e.store_id
group by s.id
having empl_count >= 1
order by full_address asc;

select CONCAT(e.first_name, ' ', e.middle_name, '. ', e.last_name, ' ', 'works in store for', TIMESTAMPDIFF(YEAR, NOW(), e.hire_date), 'years') from employees as e
join stores as s on s.id = e.store_id
where s.name = 'Keylex'
having MAX(e.salary);

insert into products_stores (product_id, store_id)
(SELECT p.id, 1 from products as p
    left join products_stores as ps
    on p.id = ps.product_id
    where ps.product_id IS NULL);

update employees as e
set e.salary = e.salary - 500,e.manager_id = 3
    where YEAR(e.hire_date) > 2003 and e.store_id not in
(SELECT s.id from stores as s where s.`name` not in ('Cardguard','Veribet'));

delete from employees
where salary > 6000 and manager_id is not null;